package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"LFGbackend/graph/model"
	"LFGbackend/resolvers"
	"context"
)

// UpsertPlayer is the resolver for the upsertPlayer field.
func (r *mutationResolver) UpsertPlayer(ctx context.Context, player model.PlayerInput) (*model.Player, error) {
	return resolvers.UpsertPlayerResolver(ctx, player)
}

// CreatePost is the resolver for the createPost field.
func (r *mutationResolver) CreatePost(ctx context.Context, mode model.GameMode, player model.PlayerInput, need int, minRank model.Rank) (string, error) {
	return resolvers.CreatePostResolver(ctx, mode, player, need, minRank)
}

// JoinPost is the resolver for the joinPost field.
func (r *mutationResolver) JoinPost(ctx context.Context, player model.PlayerInput, id string) (bool, error) {
	return resolvers.JoinPostResolver(ctx, player, id)
}

// GetPlayer is the resolver for the getPlayer field.
func (r *queryResolver) GetPlayer(ctx context.Context, player model.PlayerInput) (*model.Player, error) {
	return resolvers.GetPlayerResolver(ctx, player)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
